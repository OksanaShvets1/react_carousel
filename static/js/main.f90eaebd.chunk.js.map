{"version":3,"sources":["components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentSlide","handlePrev","props","images","step","frameSize","itemWidth","infinite","animationDuration","maxSlide","length","setState","list","document","querySelector","style","transition","transform","handleNext","this","className","width","map","img","src","alt","indexOf","type","onClick","disabled","Component","App","htmlFor","id","defaultValue","min","onChange","e","target","value","currentTarget","checked","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f90eaebd.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport { Component } from 'react';\nimport './Carousel.scss';\n\ninterface State {\n  currentSlide: number;\n}\n\ninterface Props {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    currentSlide: 0,\n  };\n\n  handlePrev = () => {\n    const { currentSlide } = this.state;\n\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n      animationDuration,\n    } = this.props;\n\n    const maxSlide = images.length * itemWidth - frameSize * itemWidth;\n\n    if (currentSlide < 0) {\n      if (currentSlide + itemWidth * step > 0) {\n        this.setState({ currentSlide: 0 });\n      } else {\n        this.setState({ currentSlide: currentSlide + itemWidth * step });\n      }\n    } else if (infinite && currentSlide === 0) {\n      this.setState({ currentSlide: -maxSlide });\n    } else {\n      this.setState({ currentSlide: currentSlide - itemWidth * step });\n    }\n\n    const list = document.querySelector('.carousel__list') as HTMLElement;\n\n    if (list) {\n      list.style.transition = `transform ${animationDuration}ms ease-in-out`;\n      list.style.transform = `translateX(${this.state.currentSlide}px)`;\n    }\n  };\n\n  handleNext = () => {\n    const { currentSlide } = this.state;\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const maxSlide = images.length * itemWidth - frameSize * itemWidth;\n\n    if (currentSlide > -maxSlide) {\n      if (currentSlide - itemWidth * step < -maxSlide) {\n        this.setState({ currentSlide: 0 });\n      } else {\n        this.setState({ currentSlide: currentSlide - itemWidth * step });\n      }\n    } else if (infinite && currentSlide === -maxSlide) {\n      this.setState({ currentSlide: 0 });\n    }\n\n    // Add sliding animation to the carousel list\n    const list = document.querySelector('.carousel__list') as HTMLElement;\n\n    if (list) {\n      list.style.transition = `transform ${animationDuration}ms ease-in-out`;\n      list.style.transform = `translateX(${this.state.currentSlide}px)`;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { currentSlide } = this.state;\n\n    return (\n      <div className=\"carousel\" style={{ width: frameSize * itemWidth }}>\n        <ul\n          className=\"carousel__list\"\n          style={{\n            transform: `translateX(${currentSlide}px)`,\n            transition: `all ${animationDuration}ms ease-in-out`,\n            width: `${itemWidth * images.length}px`,\n          }}\n        >\n          {images.map(img => (\n            <li key={images.indexOf(img)}>\n              <img\n                src={`${img}`}\n                alt=\"Emojy\"\n                style={{ width: itemWidth }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handlePrev}\n            disabled={\n              infinite ? false : currentSlide === 0\n            }\n          >\n            &lt;\n          </button>\n          <button\n            data-cy=\"next\"\n            onClick={this.handleNext}\n            type=\"button\"\n            disabled={\n              infinite\n                ? false\n                : currentSlide === (\n                  images.length * itemWidth - frameSize * itemWidth\n                ) * -1\n            }\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"form\">\n          <label htmlFor=\"itemId\" className=\"form__label\">\n            Item width\n            <br />\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              defaultValue={130}\n              min={130}\n              onChange={(e) => {\n                this.setState({ itemWidth: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"frameId\" className=\"form__label\">\n            Frame size\n            <br />\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              defaultValue={3}\n              min={1}\n              onChange={(e) => {\n                this.setState({ frameSize: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"stepId\" className=\"form__label\">\n            Step\n            <br />\n            <input\n              type=\"number\"\n              id=\"step\"\n              defaultValue={3}\n              min={1}\n              onChange={(e) => {\n                this.setState({ step: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\" className=\"form__label\">\n            Animation duration\n            <br />\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              defaultValue={1000}\n              min={0}\n              step=\"1000\"\n              onChange={(e) => {\n                this.setState({ animationDuration: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"infinite\" className=\"form__label\">\n            Infinite\n            <br />\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              onClick={(e) => {\n                this.setState({ infinite: e.currentTarget.checked });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}