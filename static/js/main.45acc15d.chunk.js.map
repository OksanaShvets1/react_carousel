{"version":3,"sources":["components/CarouselItem/CarouselItem.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["CarouselItem","imageSrc","className","src","alt","slice","Carousel","state","currentSlide","handlePrev","step","props","setState","handleNext","images","length","this","frameSize","itemWidth","animationDuration","infinite","style","width","transform","transition","map","image","indexOf","type","onClick","disabled","Component","App","htmlFor","id","defaultValue","min","onChange","e","target","value","currentTarget","checked","ReactDOM","render","document","getElementById"],"mappings":"yQAOaA,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7C,OACE,oBAAIC,UAAU,gBAAd,SACE,qBACEC,IAAG,UAAKF,GACRG,IAAG,UAAKH,EAASI,MAAM,GAAI,IAC3BH,UAAU,oBCKLI,EAAb,4MACEC,MAAQ,CACNC,aAAc,GAFlB,EAKEC,WAAa,WACX,IAAQD,EAAiB,EAAKD,MAAtBC,aACAE,EAAS,EAAKC,MAAdD,KAEJF,EAAeE,GAAQ,GACzB,EAAKE,SAAS,CAAEJ,aAAcA,EAAeE,KAVnD,EAcEG,WAAa,WACX,IAAQL,EAAiB,EAAKD,MAAtBC,aACR,EAAyB,EAAKG,MAAtBG,EAAR,EAAQA,OAAQJ,EAAhB,EAAgBA,KAEZF,EAAeE,EAAOI,EAAOC,QAC/B,EAAKH,SAAS,CAAEJ,aAAcA,EAAeE,KAnBnD,4CAuBE,WACE,MAOIM,KAAKL,MANPG,EADF,EACEA,OACAJ,EAFF,EAEEA,KACAO,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGMZ,EAAiBQ,KAAKT,MAAtBC,aAER,OACE,sBAAKN,UAAU,WAAWmB,MAAO,CAAEC,MAAOL,EAAYC,GAAtD,UACE,qBAAKhB,UAAU,iBAAf,SACE,oBACEA,UAAU,iBACVmB,MAAO,CACLE,UAAU,aAAD,OAAeb,EAAOQ,EAAtB,UACTM,WAAW,OAAD,OAASL,EAAT,YAJd,SAOGL,EAAOW,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAEEzB,SAAUyB,GADLZ,EAAOa,QAAQD,WAO5B,sBAAKxB,UAAU,UAAf,UACE,wBACE0B,KAAK,SACLC,QAASb,KAAKP,WACdqB,UACEV,GAAoC,IAAjBZ,EAJvB,eASA,wBACEqB,QAASb,KAAKH,WACde,KAAK,SACLE,UACEV,GAEIZ,KAEG,GADHM,EAAOC,OAASG,EAAYD,EAAYC,GAPhD,yBAhEV,GAA8Ba,aCLjBC,EAAb,4MACEzB,MAAQ,CACNO,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFJ,KAAM,EACNO,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,GAlBd,4CAqBE,WAAU,IAAD,OACP,EAEIJ,KAAKT,MADPO,EADF,EACEA,OAAQJ,EADV,EACUA,KAAMO,EADhB,EACgBA,UAAWC,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,kBAAmBC,EADzD,EACyDA,SAGzD,OACE,sBAAKlB,UAAU,MAAf,UAEE,gDAAmBY,EAAOC,OAA1B,aAEA,cAAC,EAAD,CACED,OAAQA,EACRJ,KAAMA,EACNO,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,IAGZ,uBAAMlB,UAAU,OAAhB,UACE,wBAAO+B,QAAQ,YAAY/B,UAAU,cAArC,uBAEE,uBACA,uBACE0B,KAAK,SACLM,GAAG,YACHC,aAAc,IACdC,IAAK,IACLC,SAAU,SAACC,GACT,EAAK1B,SAAS,CAAEM,WAAYoB,EAAEC,OAAOC,cAI3C,wBAAOP,QAAQ,YAAY/B,UAAU,cAArC,uBAEE,uBACA,uBACE0B,KAAK,SACLM,GAAG,YACHC,aAAc,EACdC,IAAK,EACLC,SAAU,SAACC,GACT,EAAK1B,SAAS,CAAEK,WAAYqB,EAAEC,OAAOC,cAI3C,wBAAOP,QAAQ,OAAO/B,UAAU,cAAhC,iBAEE,uBACA,uBACE0B,KAAK,SACLM,GAAG,OACHC,aAAc,EACdC,IAAK,EACLC,SAAU,SAACC,GACT,EAAK1B,SAAS,CAAEF,MAAO4B,EAAEC,OAAOC,cAItC,wBAAOP,QAAQ,oBAAoB/B,UAAU,cAA7C,+BAEE,uBACA,uBACE0B,KAAK,SACLM,GAAG,oBACHC,aAAc,IACdC,IAAK,EACL1B,KAAK,OACL2B,SAAU,SAACC,GACT,EAAK1B,SAAS,CAAEO,mBAAoBmB,EAAEC,OAAOC,cAInD,wBAAOP,QAAQ,WAAW/B,UAAU,cAApC,qBAEE,uBACA,uBACE0B,KAAK,WACLM,GAAG,WACHL,QAAS,SAACS,GACR,EAAK1B,SAAS,CAAEQ,SAAUkB,EAAEG,cAAcC,0BArG1D,GAAyBX,aCVzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.45acc15d.chunk.js","sourcesContent":["import React from 'react';\nimport './CarouselItem.scss';\n\ninterface Props {\n  imageSrc: string,\n}\n\nexport const CarouselItem:React.FC<Props> = ({ imageSrc }) => {\n  return (\n    <li className=\"carousel-item\">\n      <img\n        src={`${imageSrc}`}\n        alt={`${imageSrc.slice(5, -4)}`}\n        className=\"carousel-img\"\n      />\n    </li>\n  );\n};\n","/* eslint-disable react/no-unused-prop-types */\nimport { Component } from 'react';\nimport './Carousel.scss';\nimport { CarouselItem } from '../CarouselItem/CarouselItem';\n\ninterface State {\n  currentSlide: number;\n}\n\ninterface Props {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    currentSlide: 0,\n  };\n\n  handlePrev = () => {\n    const { currentSlide } = this.state;\n    const { step } = this.props;\n\n    if (currentSlide - step >= 0) {\n      this.setState({ currentSlide: currentSlide - step });\n    }\n  };\n\n  handleNext = () => {\n    const { currentSlide } = this.state;\n    const { images, step } = this.props;\n\n    if (currentSlide + step < images.length) {\n      this.setState({ currentSlide: currentSlide + step });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { currentSlide } = this.state;\n\n    return (\n      <div className=\"carousel\" style={{ width: frameSize * itemWidth }}>\n        <div className=\"carousel-inner\">\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translate(${step * itemWidth}px, 0)`,\n              transition: `all ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((image) => (\n              <CarouselItem\n                key={images.indexOf(image)}\n                imageSrc={image}\n              />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handlePrev}\n            disabled={\n              infinite ? false : currentSlide === 0\n            }\n          >\n            &lt;\n          </button>\n          <button\n            onClick={this.handleNext}\n            type=\"button\"\n            disabled={\n              infinite\n                ? false\n                : currentSlide === (\n                  images.length * itemWidth - frameSize * itemWidth\n                ) * -1\n            }\n          >\n            &gt;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"form\">\n          <label htmlFor=\"itemWidth\" className=\"form__label\">\n            Item width\n            <br />\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              defaultValue={130}\n              min={130}\n              onChange={(e) => {\n                this.setState({ itemWidth: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"frameSize\" className=\"form__label\">\n            Frame size\n            <br />\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              defaultValue={3}\n              min={1}\n              onChange={(e) => {\n                this.setState({ frameSize: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"step\" className=\"form__label\">\n            Step\n            <br />\n            <input\n              type=\"number\"\n              id=\"step\"\n              defaultValue={3}\n              min={1}\n              onChange={(e) => {\n                this.setState({ step: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"animationDuration\" className=\"form__label\">\n            Animation duration\n            <br />\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              defaultValue={1000}\n              min={0}\n              step=\"1000\"\n              onChange={(e) => {\n                this.setState({ animationDuration: +e.target.value });\n              }}\n            />\n          </label>\n          <label htmlFor=\"infinite\" className=\"form__label\">\n            Infinite\n            <br />\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              onClick={(e) => {\n                this.setState({ infinite: e.currentTarget.checked });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}